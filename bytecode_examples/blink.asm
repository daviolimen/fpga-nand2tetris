// bootstrap code
@256
D=A
@SP
M=D
// call Sys.init 0
@Sys.init$ret1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Sys.init$ret1)
// function Sys.init 0
(Sys.init)
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop leds 0
@16384
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// label MAINLOOP
(MAINLOOP)
// call delay 0
@delay$ret2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@delay
0;JMP
(delay$ret2)
// pop temp 1
@6
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// if-gotoTURNON
@SP
AM=M-1
D=M
@TURNON
D;JNE
// goto TURNOFF
@TURNOFF
0;JMP
// label TURNON
(TURNON)
// push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop leds 0
@16384
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// goto MAINLOOP
@MAINLOOP
0;JMP
// label TURNOFF
(TURNOFF)
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop leds 0
@16384
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// goto MAINLOOP
@MAINLOOP
0;JMP
// return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
// function delay 0
(delay)
// push constant 50
@50
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop temp 1
@6
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push constant 200
@200
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop temp 2
@7
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// label LOOP1
(LOOP1)
// label LOOP2
(LOOP2)
// push temp 2
@7
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub command
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=D
// pop temp 2
@7
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push temp 2
@7
D=M
@SP
A=M
M=D
@SP
M=M+1
// if-gotoLOOP2
@SP
AM=M-1
D=M
@LOOP2
D;JNE
// push constant 200
@200
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop temp 2
@7
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push temp 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub command
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=D
// pop temp 1
@6
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push temp 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
// if-gotoLOOP1
@SP
AM=M-1
D=M
@LOOP1
D;JNE
// return
@LCL
D=M
@13
M=D
@5
A=D-A
D=M
@14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A
@SP
M=D+1
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@14
A=M
0;JMP
